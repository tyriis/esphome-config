# 2022-06-04

substitutions:
  host_name: sensor-kitchen
  device_name: sensor_kitchen
  friendly_name: Sensor Kitchen

esphome:
  name: ${host_name}
  platform: ESP8266
  board: nodemcuv2

  on_boot:
    - priority: 100 # Highest priority, ensures light turns on without delay.
      then:
        - light.turn_on:
            id: nightlight
            brightness: 40%
            red: 50%
            green: 0%
            blue: 50%

# Enable logging
logger:
  level: INFO
  logs:
    mqtt.component: INFO
    mqtt.client: INFO

# Enable Home Assistant API
api:
  password: !secret api_password
  encryption:
    key: !secret api_encription_key

ota:
  password: !secret ota_password_old

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  use_address: 192.168.1.143

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "ESPHome ${device_name} Hotspot"
    password: !secret ap_password

captive_portal:

# MQTT
mqtt:
  # disable mqtt logging
  log_topic:
  id: mqtt_client
  broker: !secret mqtt_broker
  client_id: esphome_${device_name}
  discovery: false
  discovery_retain: true
  topic_prefix: ESPHome/${device_name}
  birth_message:
    topic: ESPHome/${device_name}/state
    payload: 1
    qos: 2
    retain: true
  shutdown_message:
    topic: ESPHome/${device_name}/state
    payload: 0
    qos: 2
    retain: true
  will_message:
    topic: ESPHome/${device_name}/state
    payload: 0
    qos: 2
    retain: true

# web_server:
#   port: 80
#   auth:
#     username: !secret web_username
#     password: !secret web_password
#   ota: false

# expose prometheus data
prometheus:

# i2c config
i2c:
  sda: D2
  scl: D1
  scan: true

# PIR motion sensor
binary_sensor:
  - platform: gpio
    pin:
      number: D6
    name: "${friendly_name} sr501 PIR Motion"
    device_class: motion
  - platform: status
    name: "${friendly_name} Status"


text_sensor:
  # wifi info
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} WiFi IP"
  - platform: version
    name: "${friendly_name} Firmware"

  - platform: template
    name: "${friendly_name} MAC Address"
    lambda: 'return {WiFi.macAddress().c_str()};'
    icon: mdi:fingerprint
    update_interval: 60s
    internal: true

  - platform: template
    name: "${friendly_name} Wifi Strength"
    id: ${device_name}_wifi_strength
    icon: "mdi:wifi"
    lambda: |-
      if (id(${device_name}_wifi_signal).state > -50 ) {
        return {"Excellent"};
      } else if (id(${device_name}_wifi_signal).state > -60) {
        return {"Good"};
      } else if (id(${device_name}_wifi_signal).state > -70) {
        return {"Fair"};
      } else if (id(${device_name}_wifi_signal).state < -70) {
        return {"Weak"};
      } else {
        return {"None"};
      }
    update_interval: 30s

sensor:
  - platform: uptime
    name: "${friendly_name} Uptime"
    id: uptime_sensor
    update_interval: 60s
    disabled_by_default: true
    # on_raw_value:
    #   then:
    #     - text_sensor.template.publish:
    #         id: uptime_human
    #         state: !lambda |-
    #           int seconds = round(id(uptime_sensor).raw_state);
    #           int days = seconds / (24 * 3600);
    #           seconds = seconds % (24 * 3600);
    #           int hours = seconds / 3600;
    #           seconds = seconds % 3600;
    #           int minutes = seconds /  60;
    #           seconds = seconds % 60;
    #           return (
    #             (days ? to_string(days) + "d " : "") +
    #             (hours ? to_string(hours) + "h " : "") +
    #             (minutes ? to_string(minutes) + "m " : "") +
    #             (to_string(seconds) + "s")
    #           ).c_str();
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    id: ${device_name}_wifi_signal
    update_interval: 30s
    internal: true

  # HTU21D sensor
  - platform: htu21d
    temperature:
      name: "${friendly_name} HTU21d Temperature"
    humidity:
      name: "${friendly_name} HTU21d Humidity"
    update_interval: 15s


time:
  - platform: homeassistant
    id: homeassistant_time

switch:
  - platform: restart
    name: "${friendly_name} Restart"
    disabled_by_default: true


status_led:
  # https://esphome.io/components/status_led
  pin:
    number: GPIO0
    inverted: True

# WS2812b led
light:
  - platform: neopixelbus
    type: GRB
    variant: WS2812X
    pin: D5
    num_leds: 1
    name: "${friendly_name} Nightlight"
    id: nightlight
